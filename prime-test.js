//尝试获得大素数。
const bigintCryptoUtils = require('bigint-crypto-utils')
async function primeTesting (){
    // Let us print out a probable prime of 2048 bits
    console.log(await bigintCryptoUtils.prime(2048))
  
    // Testing if number is a probable prime (Miller-Rabin)
    const number = 18105544612633987652723327769640187880047684262737619356842416556841932932038686724823409129585283263527387562089530412348589982338725284163205171085017267844436373091887701256213449457676671026782300520923008603071518399710460337432044510922308746794586722342415739440566522897524408970596140907334764585789739633588840705477920420027230915337664820331704728391545404375294036364575799851067626911100994993031506295420797396510695475325543469774731674878410020803268973173802730875631576654004692580342400144497803769923579467711304599073833192827754378807505294047098394910239336191584692326724725566581704983301859n
    console.log(number)
    const isPrime = await bigintCryptoUtils.isProbablyPrime(number)
    if (isPrime === true) {
      console.log(`${number} is prime`)
    } else {
      console.log(`${number} is composite`)
    }
  }
  
  primeTesting()
 